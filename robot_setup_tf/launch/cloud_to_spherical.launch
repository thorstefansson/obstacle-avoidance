<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>


	<include file = "$(find simulation)/launch/both.launch" />

	<node pkg="robot_setup_tf" type="tf_robot" name="tf_robot" output="screen" />
	<node pkg="robot_setup_tf" type="tf_broadcaster" name="tf_broadcaster" output="screen" />
	<node pkg="robot_setup_tf" type="laser_scan_to_point_cloud" name="laser_scan_to_point_cloud" output="screen" />

	<node pkg="rviz" type="rviz" name="rviz" />

	<node pkg="robot_setup_tf" type="cloud_to_spherical" name="cloud_to_spherical" output="screen" />


</launch>
